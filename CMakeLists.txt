cmake_minimum_required(VERSION 3.16...3.21)

# Change obs-plugintemplate to your plugin's name in a machine-readable format
# (e.g.: obs-myawesomeplugin) and set
project(obs-multi-rtmp VERSION 0.2.8.1)
add_library(obs-multi-rtmp MODULE)

# Replace `Your Name Here` with the name (yours or your organization's) you want
# to see as the author of the plugin (in the plugin's metadata itself and in the
# installers)
set(PLUGIN_AUTHOR "sorayuki")

# Replace `com.example.obs-plugin-template` with a unique Bundle ID for macOS
# releases (used both in the installer and when submitting the installer for
# notarization)
set(MACOS_BUNDLEID "com.sorayuki.obs-multi-rtmp")

# Add your custom source files here - header files are optional and only
# required for visibility e.g. in Xcode or Visual Studio
target_sources(
  obs-multi-rtmp
  PRIVATE ./src/edit-widget.cpp
          ./src/obs-multi-rtmp.cpp
          ./src/push-widget.cpp)

target_sources(
  obs-multi-rtmp
  PRIVATE ./src/edit-widget.h
          ./src/obs-multi-rtmp.h
          ./src/pch.h
          ./src/push-widget.h)

# Import libobs as main plugin dependency
find_package(libobs REQUIRED)
include(cmake/ObsPluginHelpers.cmake)

# Uncomment these lines if you want to use the OBS Frontend API in your plugin

find_package(obs-frontend-api REQUIRED)
target_link_libraries(obs-multi-rtmp PRIVATE OBS::obs-frontend-api)

# Uncomment those lines if you want to use Qt in your plugin

find_qt(COMPONENTS Widgets Core)
target_link_libraries(obs-multi-rtmp PRIVATE Qt::Core Qt::Widgets)
set_target_properties(
  obs-multi-rtmp
  PROPERTIES AUTOMOC ON
             AUTOUIC ON
             AUTORCC ON)

configure_file(src/plugin-macros.h.in
               ${CMAKE_SOURCE_DIR}/src/plugin-macros.generated.h)

target_sources(obs-multi-rtmp PRIVATE src/plugin-macros.generated.h)

# /!\ TAKE NOTE: No need to edit things past this point /!\

# --- Platform-independent build settings ---

target_include_directories(obs-multi-rtmp PRIVATE ${CMAKE_SOURCE_DIR}/src)

target_link_libraries(obs-multi-rtmp PRIVATE OBS::libobs)

# --- End of section ---

# --- Windows-specific build settings and tasks ---
if(OS_WINDOWS)
  configure_file(cmake/bundle/windows/installer-Windows.iss.in
                 ${CMAKE_BINARY_DIR}/installer-Windows.generated.iss)

  if(MSVC)
    target_compile_options(obs-multi-rtmp PRIVATE /W3)
  endif()
  # --- End of section ---

  # -- macOS specific build settings and tasks --
elseif(OS_MACOS)
  configure_file(cmake/bundle/macos/installer-macos.pkgproj.in
                 ${CMAKE_BINARY_DIR}/installer-macos.generated.pkgproj)

  set(MACOSX_PLUGIN_GUI_IDENTIFIER "${MACOS_BUNDLEID}")
  set(MACOSX_PLUGIN_BUNDLE_VERSION "${CMAKE_PROJECT_VERSION}")
  set(MACOSX_PLUGIN_SHORT_VERSION_STRING "0.2.8.1")

  target_compile_options(obs-multi-rtmp PRIVATE -Wall)
  # --- End of section ---

  # --- Linux-specific build settings and tasks ---
else()
  target_compile_options(obs-multi-rtmp PRIVATE -Wall)
endif()
# --- End of section ---

setup_plugin_target(obs-multi-rtmp)
